//
//  BankSelectionRouter.swift
//  PaymentApp
//
//  Created by Alejandro Melo Domínguez on 08-01-19.
//  Copyright (c) 2019 Alejandro Melo Domínguez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol BankSelectionRoutingLogic {
    func routeToInstallmentsSelection(segue: UIStoryboardSegue?)
}

protocol BankSelectionDataPassing {
    var dataStore: BankSelectionDataStore? { get }
}

class BankSelectionRouter: NSObject, BankSelectionRoutingLogic, BankSelectionDataPassing {
    weak var viewController: BankSelectionViewController?
    var dataStore: BankSelectionDataStore?

    // MARK: Routing
    func routeToInstallmentsSelection(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! InstallmentsSelectionViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToInstallmentsSelection(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "InstallmentsSelection", bundle: nil)
            let destinationVC = storyboard.instantiateInitialViewController() as! InstallmentsSelectionViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToInstallmentsSelection(source: dataStore!, destination: &destinationDS)
            navigateToInstallmentsSelection(source: viewController!, destination: destinationVC)
        }
    }

    // MARK: Navigation
    func navigateToInstallmentsSelection(source: BankSelectionViewController, destination: InstallmentsSelectionViewController) {
        source.show(destination, sender: nil)
    }

    // MARK: Passing data
    func passDataToInstallmentsSelection(source: BankSelectionDataStore, destination: inout InstallmentsSelectionDataStore) {
        destination.amount = source.amount
        destination.paymentMethod = source.paymentMethod
        destination.cardIssuer = source.selectedBank
    }
}
