//
//  PaymentMethodCCRouter.swift
//  PaymentApp
//
//  Created by Alejandro Melo Domínguez on 08-01-19.
//  Copyright (c) 2019 Alejandro Melo Domínguez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol PaymentMethodCCRoutingLogic {
    //func routeToSomewhere(segue: UIStoryboardSegue?)
    func routeToBankSelection(segue: UIStoryboardSegue?)
}

protocol PaymentMethodCCDataPassing {
    var dataStore: PaymentMethodCCDataStore? { get }
}

class PaymentMethodCCRouter: NSObject, PaymentMethodCCRoutingLogic, PaymentMethodCCDataPassing {
    weak var viewController: PaymentMethodCCViewController?
    var dataStore: PaymentMethodCCDataStore?

    // MARK: Routing
    func routeToBankSelection(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! BankSelectionViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToBankSelection(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "BankSelection", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "BankSelectionViewController") as! BankSelectionViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToBankSelection(source: dataStore!, destination: &destinationDS)
            navigateToBankSelection(source: viewController!, destination: destinationVC)
        }

    }

    // MARK: Navigation
    func navigateToBankSelection(source: PaymentMethodCCViewController, destination: BankSelectionViewController) {
        source.show(destination, sender: nil)
    }

    // MARK: Passing data
    func passDataToBankSelection(source: PaymentMethodCCDataStore, destination: inout BankSelectionDataStore) {
        destination.amount = source.amount
        destination.paymentMethodId = source.selectedPaymentMethod?.id
    }
}
